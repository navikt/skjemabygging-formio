name: Build and test monorepo, and deploy bygger
on:
  push
env:
  IMAGE: "ghcr.io/${{ github.repository }}/${{ github.ref == 'refs/heads/master' && 'bygger' || 'bygger-dev' }}:${{ github.sha }}"
  IMAGE_FYLLUT_BASE: "ghcr.io/${{ github.repository }}/fyllut-base:${{ github.sha }}"
  IMAGE_FYLLUT_BASE_DEV: "ghcr.io/${{ github.repository }}/fyllut-base-dev:${{ github.sha }}"

concurrency: deploy-${{ github.ref }}

jobs:
  build-and-test:
    name: "Build and test packages"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.17.1'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - name: "Bootstrap"
        run: yarn bootstrap
      - name: "No unstaged changes allowed (changes in yarn.lock?)"
        run: git diff --quiet
      - name: "Check types"
        run: yarn check-types
      - name: "Build"
        run: yarn build
      - name: "Test"
        run: yarn test

  package-and-push-bygger:
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/experimental/')
    name: "Package bygger"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.17.1'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - name: "Build application: Bygger"
        env:
          REACT_APP_GIT_VERSION: ${{ github.sha }}
        run: bin/build-application.sh bygger
      - name: Login to GitHub Package Repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Build and publish Docker image"
        working-directory: ./packages/bygger
        run: |
          docker build --pull --tag ${IMAGE} --build-arg git_sha=${{ github.sha }} .
          docker push ${IMAGE}

  package-and-push-fyllut-base:
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/experimental/')
    name: "Package fyllut"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.17.1'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - name: "Build application: Fyllut"
        env:
          REACT_APP_GIT_VERSION: ${{ github.sha }}
        run: bin/build-application.sh fyllut
      - name: Login to GitHub Package Repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Build and push Docker image: fyllut-base-dev"
        working-directory: ./packages/fyllut
        run: |
          docker build --pull -t ${IMAGE_FYLLUT_BASE_DEV} -f Dockerfile-base --build-arg git_sha=${{ github.sha }} .
          docker push ${IMAGE_FYLLUT_BASE_DEV}
      - name: "Tag and push Docker image: fyllut-base"
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag ${IMAGE_FYLLUT_BASE_DEV} ${IMAGE_FYLLUT_BASE}
          docker push ${IMAGE_FYLLUT_BASE}

  deploy-bygger-to-dev:
    name: "Deploy bygger to dev"
    if: github.ref == 'refs/heads/master'
    needs: [build-and-test, package-and-push-bygger, package-and-push-fyllut-base]
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy to DEV"
        env:
          APIKEY: "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          CLUSTER: "dev-gcp"
          RESOURCE: "./packages/bygger/.nais/nais.yaml"
          VARS: "./packages/bygger/.nais/dev.yaml"
        uses: "nais/deploy/actions/deploy@v1"

  deploy-bygger-to-prod:
    name: "Deploy bygger to prod"
    if: github.ref == 'refs/heads/master'
    needs: [build-and-test, package-and-push-bygger, package-and-push-fyllut-base]
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy to PROD"
        env:
          APIKEY: "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          CLUSTER: "prod-gcp"
          RESOURCE: "./packages/bygger/.nais/nais.yaml"
          VARS: "./packages/bygger/.nais/prod.yaml"
        uses: "nais/deploy/actions/deploy@v1"

  deploy-bygger-experimental-to-dev:
    name: "Deploy bygger experimental to dev"
    if: startsWith(github.ref, 'refs/heads/experimental/')
    needs: [build-and-test, package-and-push-bygger, package-and-push-fyllut-base]
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy experimental to DEV"
        env:
          APIKEY: "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          CLUSTER: "dev-gcp"
          RESOURCE: "./packages/bygger/.nais/nais.yaml"
          VARS: "./packages/bygger/.nais/dev-experimental.yaml"
        uses: "nais/deploy/actions/deploy@v1"

  trigger-deploy-fyllut-to-dev:
    name: "Trigger deploy fyllut to dev"
    needs: deploy-bygger-to-dev
    runs-on: ubuntu-latest
    steps:
      - name: "Trigger deploy fyllut to dev"
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "Trigger dev deploy"
          repo: navikt/skjemautfylling-formio
          ref: "dev-deploy"
          token: ${{ secrets.TEAM_ACCESS_TOKEN }}
          inputs: '{ "monorepoGitHash": "${{ github.sha }}" }'

  trigger-deploy-fyllut-experimental-to-dev:
    name: "Trigger deploy fyllut experimental to dev"
    needs: deploy-bygger-experimental-to-dev
    runs-on: ubuntu-latest
    steps:
      - name: "Trigger deploy fyllut experimental to dev"
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "Trigger dev deploy"
          repo: navikt/skjemautfylling-formio
          ref: "experimental-deploy"
          token: ${{ secrets.TEAM_ACCESS_TOKEN }}
          inputs: '{ "monorepoGitHash": "${{ github.sha }}" }'
