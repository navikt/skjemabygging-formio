name: Build and test monorepo, and deploy bygger
on:
  push
env:
  IMAGE: "ghcr.io/${{ github.repository }}/${{ github.ref == 'refs/heads/master' && 'bygger' || 'bygger-dev' }}:${{ github.sha }}"

concurrency: deploy-${{ github.ref }}

jobs:
  build-and-test:
    name: "Build and test packages"
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.17.0'
      - name: "Bootstrap"
        run: yarn bootstrap
      - name: "No unstaged changes allowed (changes in yarn.lock?)"
        run: git diff --quiet
      - name: "Check types"
        run: yarn check-types
      - name: "Build"
        run: yarn build
      - name: "Test"
        run: yarn test
  verify-scripts:
    name: "Verify scripts"
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.17.0'
      - name: "Build scripts"
        run: yarn build:scripts

  package-and-push-bygger:
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/experimental/')
    needs: [build-and-test, verify-scripts]
    name: "Package bygger"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.17.0'
      - name: "Install top-level dependencies"
        run: yarn install --frozen-lockfile
      - name: "Prepare local dependencies for shared packages"
        run: node bin/prepare-production-build.mjs
      - name: "Build shared-domain"
        working-directory: ./packages/shared-domain
        run: yarn install --frozen-lockfile && yarn build
      - name: "Build shared-components"
        working-directory: ./packages/shared-components
        run: yarn install --frozen-lockfile && yarn build
      - name: "Bygger (Frontend): install dependencies and build"
        working-directory: ./packages/bygger
        env:
          REACT_APP_GIT_VERSION: ${{ github.sha }}
        run: yarn install --frozen-lockfile && yarn build
      - name: "Bygger (Backend): install dependencies and build"
        working-directory: ./packages/bygger/server
        run: yarn install --frozen-lockfile && yarn build
      - name: "Build and publish Docker image"
        working-directory: ./packages/bygger
        run: >
          docker build --pull --tag ${IMAGE} --build-arg git_sha=${{ github.sha }} .
          && echo ${{ secrets.GITHUB_TOKEN }} | docker login
          --username ${{ github.repository }} --password-stdin https://ghcr.io
          && docker push ${IMAGE}

  deploy-bygger-to-dev:
    name: "Deploy bygger to dev"
    if: github.ref == 'refs/heads/master'
    needs: package-and-push-bygger
    runs-on: ubuntu-18.04
    steps:
      - uses: "actions/checkout@v2"
      - name: "Deploy to DEV"
        env:
          APIKEY: "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          CLUSTER: "dev-gcp"
          RESOURCE: "./packages/bygger/.nais/nais.yaml"
          VARS: "./packages/bygger/.nais/dev.yaml"
        uses: "nais/deploy/actions/deploy@v1"

  deploy-bygger-experimental-to-dev:
    name: "Deploy bygger experimental to dev"
    if: startsWith(github.ref, 'refs/heads/experimental/')
    needs: package-and-push-bygger
    runs-on: ubuntu-18.04
    steps:
      - uses: "actions/checkout@v2"
      - name: "Deploy experimental to DEV"
        env:
          APIKEY: "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          CLUSTER: "dev-gcp"
          RESOURCE: "./packages/bygger/.nais/nais.yaml"
          VARS: "./packages/bygger/.nais/dev-experimental.yaml"
        uses: "nais/deploy/actions/deploy@v1"

  trigger-deploy-fyllut-to-dev:
    name: "Trigger deploy fyllut to dev"
    needs: deploy-bygger-to-dev
    runs-on: ubuntu-latest
    steps:
      - name: "Trigger deploy fyllut to dev"
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "Trigger dev deploy"
          repo: navikt/skjemautfylling-formio
          ref: "dev-deploy"
          token: ${{ secrets.TEAM_ACCESS_TOKEN }}
          inputs: '{ "monorepoGitHash": "${{ github.sha }}" }'

  trigger-deploy-fyllut-experimental-to-dev:
    name: "Trigger deploy fyllut experimental to dev"
    needs: deploy-bygger-experimental-to-dev
    runs-on: ubuntu-latest
    steps:
      - name: "Trigger deploy fyllut experimental to dev"
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "Trigger dev deploy"
          repo: navikt/skjemautfylling-formio
          ref: "experimental-deploy"
          token: ${{ secrets.TEAM_ACCESS_TOKEN }}
          inputs: '{ "monorepoGitHash": "${{ github.sha }}" }'
