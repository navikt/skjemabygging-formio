name: Deploy-to-dev
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Define build environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ::set-env name=CI::true
          echo ::set-env name=IMAGE_REGISTRY::docker.pkg.github.com/$(echo ${GITHUB_REPOSITORY})
          echo ::set-env name=IMAGE_NAME::$(echo ${GITHUB_REPOSITORY##*/})
          echo ::set-env name=IMAGE_VERSION::$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})
          echo ::set-env name=GITHUB_TOKEN::$(echo ${GITHUB_TOKEN})
      - name: Cache node_module download
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache local node modules
        id: cache-local-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Install deps if needed
        if: steps.cache-local-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm test
      - run: npm run build
